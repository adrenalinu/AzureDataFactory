{
	"name": "CSV to DWH",
	"properties": {
		"activities": [
			{
				"name": "Copy CSV to DWH",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureDataLakeStoreReadSettings",
							"recursive": true,
							"wildcardFileName": "*.csv"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlPoolSink"
					},
					"enableStaging": false,
					"dataIntegrationUnits": 2,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SourceDataset_8gi",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DestinationDataset_8gi",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy REST API to DataLake",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "WeatherForecast",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "WeatherForecastJson",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Wait 1 Sec",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Copy CSV to DWH",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Copy REST API to DataLake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "If No Errors",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Wait 1 Sec",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"ifFalseActivities": [
						{
							"name": "Fail",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Error",
								"errorCode": "1"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Success",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Correct",
								"errorCode": "0"
							}
						}
					]
				}
			},
			{
				"name": "Machine Learning Execute Pipeline",
				"type": "AzureMLExecutePipeline",
				"dependsOn": [
					{
						"activity": "If No Errors",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureMLService",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Databricks Notebook",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Wait 1 Sec",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			}
		],
		"annotations": []
	}
}